{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\GAUTAMBHAT\\\\pwa-ui\\\\src\\\\components\\\\Login.js\";\nimport React from 'react'; //import FacebookLogin from 'react-facebook-login';\n\nimport GoogleLogin from 'react-google-login';\nimport { PostData } from '../services/PostData';\nimport { Redirect } from 'react-router-dom'; //import { Box } from '@material-ui/core';\n\nimport { Button, Typography } from '@material-ui/core'; //import { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn, MDBIcon } from 'mdbreact';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginError: false,\n      redirect: false\n    };\n    this.signup = this.signup.bind(this);\n  }\n\n  signup(res, type) {\n    let postData;\n\n    if (type === 'google') {\n      //} && res.w3.U3) {\n      postData = {// name: res.w3.ig,\n        // provider: type,\n        // email: res.w3.U3,\n        // provider_id: res.El,\n        // token: res.Zi.access_token,\n        // provider_pic: res.w3.Paa\n      };\n    }\n\n    if (postData) {\n      PostData('signup', postData).then(result => {\n        let responseJson = result;\n        sessionStorage.setItem(\"userData\", JSON.stringify(responseJson));\n        this.setState({\n          redirect: true\n        });\n      });\n    } else {}\n  }\n\n  render() {\n    if (this.state.redirect || sessionStorage.getItem('userData')) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/home'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    } // const responseFacebook = (response) => {\n    //     console.log(\"facebook console\");\n    //     console.log(response);\n    //     this.signup(response, 'facebook');\n    // }\n\n\n    const responseGoogle = response => {\n      console.log(\"google console\");\n      console.log(response);\n      this.signup(response, 'google');\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medium-12 columns\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"medium-12 columns\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"welcomeText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"div\",\n              style: {\n                backgroundColor: '#cfe8fc',\n                height: '100vh'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              clientId: \"632398293150-vcd926s2uh0qmi3h6uut1pc8vs8vrj56.apps.googleusercontent.com\",\n              buttonText: \"Login with Google\",\n              onSuccess: responseGoogle,\n              onFailure: responseGoogle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/GAUTAMBHAT/pwa-ui/src/components/Login.js"],"names":["React","GoogleLogin","PostData","Redirect","Button","Typography","Login","Component","constructor","props","state","loginError","redirect","signup","bind","res","type","postData","then","result","responseJson","sessionStorage","setItem","JSON","stringify","setState","render","getItem","responseGoogle","response","console","log","backgroundColor","height"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CACA;;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,mBAAnC,C,CAEA;;AAEA,MAAMC,KAAN,SAAoBC,SAApB,CAA8B;AAC1BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDD,EAAAA,MAAM,CAACE,GAAD,EAAMC,IAAN,EAAY;AACd,QAAIC,QAAJ;;AACA,QAAID,IAAI,KAAK,QAAb,EAAuB;AAAE;AACrBC,MAAAA,QAAQ,GAAG,CACP;AACA;AACA;AACA;AACA;AACA;AANO,OAAX;AAQH;;AAED,QAAIA,QAAJ,EAAc;AACVf,MAAAA,QAAQ,CAAC,QAAD,EAAWe,QAAX,CAAR,CAA6BC,IAA7B,CAAmCC,MAAD,IAAY;AAC1C,YAAIC,YAAY,GAAGD,MAAnB;AACAE,QAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmCC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAAnC;AACA,aAAKK,QAAL,CAAc;AAAEb,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACH,OAJD;AAKH,KAND,MAMO,CAAG;AACb;;AAEDc,EAAAA,MAAM,GAAG;AAIL,QAAI,KAAKhB,KAAL,CAAWE,QAAX,IAAuBS,cAAc,CAACM,OAAf,CAAuB,UAAvB,CAA3B,EAA+D;AAC3D,0BAAQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KANI,CAQL;AACA;AACA;AACA;AACA;;;AAEA,UAAMC,cAAc,GAAIC,QAAD,IAAc;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKhB,MAAL,CAAYgB,QAAZ,EAAsB,QAAtB;AACH,KAJD;;AAMA,wBAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACI;AAAI,YAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAC,IAApB;AAAA,oCACI,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,KAAtB;AAA4B,cAAA,KAAK,EAAE;AAAEG,gBAAAA,eAAe,EAAE,SAAnB;AAA8BC,gBAAAA,MAAM,EAAE;AAAtC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAaI,QAAC,WAAD;AACI,cAAA,QAAQ,EAAC,0EADb;AAEI,cAAA,UAAU,EAAC,mBAFf;AAGI,cAAA,SAAS,EAAEL,cAHf;AAII,cAAA,SAAS,EAAEA;AAJf;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AA8BH;;AAlFyB;;AAoF9B,eAAetB,KAAf","sourcesContent":["import React from 'react';\r\n//import FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { PostData } from '../services/PostData';\r\nimport { Redirect } from 'react-router-dom';\r\n//import { Box } from '@material-ui/core';\r\nimport { Button, Typography } from '@material-ui/core';\r\n\r\n//import { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn, MDBIcon } from 'mdbreact';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginError: false,\r\n            redirect: false\r\n        };\r\n        this.signup = this.signup.bind(this);\r\n    }\r\n\r\n    signup(res, type) {\r\n        let postData;\r\n        if (type === 'google') { //} && res.w3.U3) {\r\n            postData = {\r\n                // name: res.w3.ig,\r\n                // provider: type,\r\n                // email: res.w3.U3,\r\n                // provider_id: res.El,\r\n                // token: res.Zi.access_token,\r\n                // provider_pic: res.w3.Paa\r\n            };\r\n        }\r\n\r\n        if (postData) {\r\n            PostData('signup', postData).then((result) => {\r\n                let responseJson = result;\r\n                sessionStorage.setItem(\"userData\", JSON.stringify(responseJson));\r\n                this.setState({ redirect: true });\r\n            });\r\n        } else { }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        if (this.state.redirect || sessionStorage.getItem('userData')) {\r\n            return (<Redirect to={'/home'} />)\r\n        }\r\n\r\n        // const responseFacebook = (response) => {\r\n        //     console.log(\"facebook console\");\r\n        //     console.log(response);\r\n        //     this.signup(response, 'facebook');\r\n        // }\r\n\r\n        const responseGoogle = (response) => {\r\n            console.log(\"google console\");\r\n            console.log(response);\r\n            this.signup(response, 'google');\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"row body\">\r\n                <div className=\"medium-12 columns\">\r\n                    <div className=\"medium-12 columns\">\r\n                        <h2 id=\"welcomeText\"></h2>\r\n\r\n                        <Container maxWidth=\"sm\">\r\n                            <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\r\n\r\n\r\n\r\n\r\n                            {/* <FacebookLogin\r\nappId=\"Your FacebookAPP ID\"\r\nautoLoad={false}\r\nfields=\"name,email,picture\"\r\ncallback={responseFacebook}/>\r\n<br/><br/> */}\r\n\r\n                            <GoogleLogin\r\n                                clientId=\"632398293150-vcd926s2uh0qmi3h6uut1pc8vs8vrj56.apps.googleusercontent.com\"\r\n                                buttonText=\"Login with Google\"\r\n                                onSuccess={responseGoogle}\r\n                                onFailure={responseGoogle} />\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}